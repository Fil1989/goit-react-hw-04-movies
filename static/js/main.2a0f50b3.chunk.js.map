{"version":3,"sources":["components/FormComponent.jsx","components/Movies.jsx","components/HomePage.jsx","components/genres.js","images/nophoto.jpg","components/Cast.jsx","components/Reviews.jsx","components/MovieDescription.jsx","components/routes.js","App.js","reportWebVitals.js","index.js"],"names":["FormComponent","state","inputValue","handleChange","e","setState","currentTarget","value","this","props","defaultValue","onSubmit","type","name","onChange","placeholder","Component","Movies","movies","query","handleSubmit","preventDefault","axios","get","then","response","data","results","location","map","movie","to","pathname","id","title","HomePage","popular","className","array","Cast","actors","a","cast","catch","error","profile_path","character","src","image","alt","Reviews","reviews","length","author","content","MovieDescription","moovieGenres","genres","filter","genre_ids","includes","onClick","history","push","poster_path","vote_average","overview","match","url","path","component","AllRoutes","exact","App","activeClassName","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a0f50b3.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FormComponent extends Component {\r\n  state = {\r\n    inputValue: '',\r\n  };\r\n  componentDidMount() {\r\n    this.setState({ inputValue: this.props.defaultValue || '' });\r\n  }\r\n  handleChange = e => {\r\n    this.setState({ inputValue: e.currentTarget.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form onSubmit={this.props.onSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"search\"\r\n            onChange={this.handleChange}\r\n            placeholder=\"Search the movie\"\r\n            value={this.state.inputValue}\r\n          />\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\nFormComponent.propTypes = {\r\n  defaultValue: PropTypes.string.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\nexport default FormComponent;\r\n","import axios from 'axios';\r\nimport { Component } from 'react';\r\nimport FormComponent from './FormComponent';\r\nimport { Link } from 'react-router-dom';\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    query: '',\r\n  };\r\n  componentDidMount() {\r\n    if (this.props.location.state != null) {\r\n      axios\r\n        .get(\r\n          `https://api.themoviedb.org/3/search/movie?query=${this.props.location.state}&api_key=0c26ad7fd1fc526007c784bb0321d6a5&language=en-US&page=1&include_adult=false`,\r\n        )\r\n        .then(response => {\r\n          this.setState({\r\n            movies: response.data.results,\r\n            query: this.props.location.state,\r\n          });\r\n        });\r\n    }\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.setState({ query: e.currentTarget[0].value });\r\n    axios\r\n      .get(\r\n        `https://api.themoviedb.org/3/search/movie?query=${e.currentTarget[0].value}&api_key=0c26ad7fd1fc526007c784bb0321d6a5&language=en-US&page=1&include_adult=false`,\r\n      )\r\n      .then(response => {\r\n        this.setState({ movies: response.data.results });\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <FormComponent\r\n          onSubmit={this.handleSubmit}\r\n          defaultValue={this.props.location.state}\r\n        />\r\n        <ul>\r\n          {this.state.movies.map(movie => (\r\n            <li key={movie.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/movies/${movie.id}`,\r\n                  //   state: { movie: movie, query: this.state.query },\r\n                  state: { ...movie, query: this.state.query },\r\n                }}\r\n              >\r\n                {movie.title}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Movies;\r\n","import axios from 'axios';\r\nimport { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass HomePage extends Component {\r\n  state = {\r\n    popular: [],\r\n  };\r\n  componentDidMount() {\r\n    // axios.defaults = 'https://api.themoviedb.org/3';\r\n    axios\r\n      .get(\r\n        'https://api.themoviedb.org/3/trending/movie/day?api_key=0c26ad7fd1fc526007c784bb0321d6a5&page=1',\r\n      )\r\n      .then(response => {\r\n        this.setState({ popular: response.data.results });\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <ul>\r\n          {this.state.popular.map(movie => (\r\n            <li key={movie.id} className=\"list\">\r\n              <Link\r\n                to={{\r\n                  pathname: `/movies/${movie.id}`,\r\n                  state: movie,\r\n                }}\r\n              >\r\n                {movie.title}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","const array = [\r\n  { id: 28, name: 'Action' },\r\n  { id: 12, name: 'Adventure' },\r\n  { id: 16, name: 'Animation' },\r\n  { id: 35, name: 'Comedy' },\r\n  { id: 80, name: 'Crime' },\r\n  { id: 99, name: 'Documentary' },\r\n  { id: 18, name: 'Drama' },\r\n  { id: 10751, name: 'Family' },\r\n  { id: 14, name: 'Fantasy' },\r\n  { id: 36, name: 'History' },\r\n  { id: 27, name: 'Horror' },\r\n  { id: 10402, name: 'Music' },\r\n  { id: 9648, name: 'Mystery' },\r\n  { id: 10749, name: 'Romance' },\r\n  { id: 878, name: 'Science Fiction' },\r\n  { id: 10770, name: 'TV Movie' },\r\n  { id: 53, name: 'Thriller' },\r\n  { id: 10752, name: 'War' },\r\n  { id: 37, name: 'Western' },\r\n];\r\nexport default array;\r\n","export default __webpack_public_path__ + \"static/media/nophoto.9c8e0ce3.jpg\";","import axios from 'axios';\r\nimport { Component } from 'react';\r\nimport image from '../images/nophoto.jpg';\r\n\r\nclass Cast extends Component {\r\n  state = {\r\n    actors: [],\r\n  };\r\n  async componentDidMount() {\r\n    await axios\r\n      .get(\r\n        `https://api.themoviedb.org/3/movie/${this.props.location.state.id}/credits?api_key=0c26ad7fd1fc526007c784bb0321d6a5&language=en-US`,\r\n      )\r\n      .then(response => {\r\n        this.setState({ actors: response.data.cast });\r\n      })\r\n      .catch(error => this.setState({ error }));\r\n  }\r\n  render() {\r\n    return (\r\n      <section className=\"cast\">\r\n        <ul>\r\n          {this.state.actors.map(({ profile_path, name, character, id }) => (\r\n            <li key={id} className=\"atcors\">\r\n              {profile_path === null ? (\r\n                <img src={image} alt={name} className=\"actor_profile_picture\" />\r\n              ) : (\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w500${profile_path}`}\r\n                  alt={name}\r\n                  className=\"actor_profile_picture\"\r\n                />\r\n              )}\r\n              <p>⦁ {name}</p>\r\n              <p>&nbsp;&nbsp;Character: {character}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cast;\r\n","import axios from 'axios';\r\nimport { Component } from 'react';\r\n\r\nclass Reviews extends Component {\r\n  state = {\r\n    reviews: [],\r\n  };\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        `https://api.themoviedb.org/3/movie/${this.props.location.state.id}/reviews?api_key=0c26ad7fd1fc526007c784bb0321d6a5&language=en-US&page=1`,\r\n      )\r\n      .then(response => {\r\n        this.setState({ reviews: response.data.results });\r\n      })\r\n      .catch(error => this.setState({ error }));\r\n  }\r\n  render() {\r\n    return (\r\n      <section className=\"reviews\">\r\n        <ul>\r\n          {this.state.reviews.length !== 0 ? (\r\n            this.state.reviews.map(({ author, content, id }) => (\r\n              <li key={id} className=\"reviews\">\r\n                <h3>Author: {author}</h3>\r\n                <p> {content}</p>\r\n              </li>\r\n            ))\r\n          ) : (\r\n            <span>There is no reviews</span>\r\n          )}\r\n        </ul>\r\n      </section>\r\n    );\r\n  }\r\n}\r\nexport default Reviews;\r\n","import genres from './genres';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport Cast from './Cast';\r\nimport Reviews from './Reviews';\r\nimport image from '../images/nophoto.jpg';\r\n\r\nconst MovieDescription = props => {\r\n  const moovieGenres = genres.filter(({ id }) =>\r\n    props.location.state.genre_ids.includes(id),\r\n  );\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={() =>\r\n          props.history.push({\r\n            pathname: '/movies',\r\n            state: props.location.state.query,\r\n          })\r\n        }\r\n        className=\"go_back\"\r\n      >\r\n        ←Go Back\r\n      </button>\r\n      <section className=\"movie_description\">\r\n        {props.location.state.poster_path === null ? (\r\n          <img\r\n            src={image}\r\n            alt={props.location.state.title}\r\n            className=\"poster\"\r\n          />\r\n        ) : (\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w500${props.location.state.poster_path}`}\r\n            alt={props.location.state.title}\r\n            className=\"poster\"\r\n          />\r\n        )}\r\n\r\n        <div>\r\n          <h2>{props.location.state.title}</h2>\r\n          <p>User score: {`${props.location.state.vote_average * 10}%`}</p>\r\n          <h3>Overview</h3>\r\n          <p>{props.location.state.overview}</p>\r\n          <h3>Genres</h3>\r\n          <p>{`${moovieGenres.map(({ name }) => ` ${name}`)}`}</p>\r\n        </div>\r\n      </section>\r\n      <section className=\"aditional_info\">\r\n        Aditional information\r\n        <ul>\r\n          <li>\r\n            <Link\r\n              to={{\r\n                pathname: `${props.match.url}/cast`,\r\n                state: props.location.state,\r\n              }}\r\n            >\r\n              Cast\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link\r\n              to={{\r\n                pathname: `${props.match.url}/reviews`,\r\n                state: props.location.state,\r\n              }}\r\n            >\r\n              Reviews\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </section>\r\n\r\n      <Route path=\"/movies/:id/cast\" component={Cast} />\r\n      <Route path=\"/movies/:id/reviews\" component={Reviews} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDescription;\r\n","import Movies from './Movies';\r\nimport HomePage from './HomePage';\r\nimport MovieDescription from './MovieDescription';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nconst AllRoutes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/movies\" component={Movies} />\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route path=\"/movies/:id\" component={MovieDescription} />\r\n    </Switch>\r\n  );\r\n};\r\nexport default AllRoutes;\r\n","import { NavLink } from 'react-router-dom';\nimport { Component } from 'react';\nimport AllRoutes from './components/routes';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <NavLink to=\"/\" exact className=\"navigation\" activeClassName=\"active\">\n            HomePage\n          </NavLink>\n          <NavLink to=\"/movies\" className=\"navigation\" activeClassName=\"active\">\n            Movies\n          </NavLink>\n        </header>\n        <AllRoutes />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}